@using Blazored.LocalStorage

@if(genres == null)
{
    <Loader/>

}
else
{
    
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Client</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="toprated">
                <span class="oi oi-plus" aria-hidden="true"></span> Top Rated Movies
            </NavLink>
        </div>
        @if(genres != null){
        @foreach (var item in genres)
        {
            var link = $"genre/{item.Id}";
            <div class="nav-item px-3">
                <a class="nav-link" @onclick="@(() => GoGenre(item.Id))">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> @item.Name

                </a>
   
            </div>
        }
        }


        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <button onclick="@SignOutProfile" class="btn btn-primary btn-lg" href="signout">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Sign Out
                    </button>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="signin">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Sign In
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="register">
                        <span class="oi oi-person" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>

    </nav>
</div>


}



@code {
    [Inject] IMovieService movieService { get; set; }
    [Inject] ILocalStorageService localStorage { get; set; }
    [Inject] AuthenticationStateProvider authenticationStateProvider { get; set; }
    [Inject] NavigationManager navigationManager { get; set; }
    private bool collapseNavMenu = true;
    IList<Genre> genres { get; set; }

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }



    protected override async Task OnInitializedAsync()
    {
        genres = await movieService.GetGenres();
    }

    private async Task SignOutProfile()
    {
        if (await localStorage.ContainKeyAsync("bearerToken"))
        {
            await localStorage.RemoveItemAsync("bearerToken");
            ((AppAuthenticationStateProvider)authenticationStateProvider).SignOut();

        }
        StateHasChanged();
        navigationManager.NavigateTo("/");
    }
    private async Task GoGenre(int id)
    {
       navigationManager.NavigateTo($"/genre/{id.ToString()}");

        StateHasChanged();

    }
}
