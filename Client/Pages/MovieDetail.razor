@page "/moviedetail/{movieid:int}"

@if (movie == null)
{
	<Loader />
}

else
{
	<div class="container">
		<div class="cardMovie" style="border: none">
			<div class="container-fliud">
				<div class="wrapper row">
					<div class="preview col-md-6">

						<div class="preview-pic tab-content">
							@if (movie.trailer_link != null)
							{
								<div class="tab-pane active" id="pic-1">
									<iframe width="420" height="315" src="@movie.trailer_link"></iframe>
								</div>

							}
							else
							{
								<div class="tab-pane active" id="pic-2">
										<img src="@movie.poster_path" />
									</div>
							}



						</div>

					</div>
					<div class="details col-md-6">
						<h3 class="product-title">@movie.title</h3>
						<div class="rating">
							<div class="stars">
								@for (int i = 1; i <= movie.vote_average; i++)
								{
									<span class="fa fa-star checked"></span>

								}
								<span>@movie.vote_average</span>

							</div>
						</div>
						<p class="product-description">@movie.overview</p>
						@*<h4 class="price">current price: <span>$180</span></h4>
							<p class="vote"><strong>91%</strong> of buyers enjoyed this product! <strong>(87 votes)</strong></p>
							<h5 class="sizes">
								sizes:
								<span class="size" data-toggle="tooltip" title="small">s</span>
								<span class="size" data-toggle="tooltip" title="medium">m</span>
								<span class="size" data-toggle="tooltip" title="large">l</span>
								<span class="size" data-toggle="tooltip" title="xtra large">xl</span>
							</h5>
							<h5 class="colors">
								colors:
								<span class="color orange not-available" data-toggle="tooltip" title="Not In store"></span>
								<span class="color green"></span>
								<span class="color blue"></span>
							</h5>
							<div class="action">
								<button class="add-to-cart btn btn-default" type="button">add to cart</button>
								<button class="like btn btn-default" type="button"><span class="fa fa-heart"></span></button>
							</div>*@
					</div>
				</div>
			</div>
		</div>

		<AuthorizeView>
			<Authorized>
				<h1>Authorized</h1>
			</Authorized>
			<NotAuthorized>
				<h1>Not authorized</h1>
			</NotAuthorized>
		</AuthorizeView>

@*		<div id="carouselExampleSlidesOnly" class="carousel slide" data-ride="carousel">
			<div class="carousel-inner">
				<div class="carousel-item active">
					<img src="/images/logo.png" class="d-block w-100" alt="...">
				</div>
				<div class="carousel-item">
					<img src="@movie.poster_path" class="d-block w-100" alt="...">
				</div>
				<div class="carousel-item">
					<img src="..." class="d-block w-100" alt="...">
				</div>
			</div>
		</div>*@
	</div>
}




@code {
	[Inject]HttpClient httpClient{ get; set; }

	[Parameter]
	public int MovieId { get; set; }

	public Movie movie { get; set; }
	public VideoRoot rootVideo { get; set; }
	public List<Video> videos { get; set; }
	public string startVideo = APIEndpoints.s_startLink;

	protected override async Task OnInitializedAsync()
	{
		await GetMovie(MovieId);

	}

	private async Task GetMovie(int movieId)
	{
		movie = await httpClient.GetFromJsonAsync<Movie>(APIEndpoints.s_movieDetail.Replace("movieId", movieId.ToString()));

		movie.poster_path = APIEndpoints.s_startImg + movie.poster_path;

		rootVideo=await httpClient.GetFromJsonAsync<VideoRoot>(APIEndpoints.s_videoUrl.Replace("movieId", movieId.ToString()));

		videos = rootVideo.results;

		if (videos.Count > 0)
		{
			startVideo += videos.FirstOrDefault(p => p.type == "Trailer").key;
			movie.trailer_link = startVideo;

		}
	}

}
